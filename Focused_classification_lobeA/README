Scripts to calculate 2D reference-free class averages and measure lobe A position

1)  'auto_align_queue' is used to classify ALL particles within a given dataset.  This is a control script that submits these jobs to a SGE cluster:

-CAN_queue.csh - Script that runs 'CAN', an executable to perform topology representing network classication
-pretreat_queue.csh - Prepares references created from 'CAN' for Multi-reference-alignment.  IMPORTANT - this scripts creates mirrors of references.
-MRA_queue.csh - Runs multi-reference-alignment for newly calculated references and particles
-incore_queue.csh - Filters references

Example of command:
[michael@ql02 12mar04a]$ ./auto_align_queue 
usage:  auto_align <# iter> <starting im> <orig im> <num particles> <starting class number> <ending class number> <filter strength>
[michael@ql02 12mar04a]$ ./auto_align_queue 10 parts_prep parts_prep 20167 600 100 0.8

2)  Resulting classums are inspected, and a list of class averages is generated (numbered in EMAN format) corresponding to averages of particles in the 'standard' view of TFIID.
In this list, a negative sign is placed in front of class average numbers for class averages that need to be mirrored.

3)  Convert this list of classums into SPIDER format:
./renumber.py [list].txt

4) Extract particles into stacks corresponding to each classum with 'extract_particles_into_classes.spi'  ([file]_out2.spi using as input list)

5) Create final stack of particles with correct mirroring with 'mirror_some_stacks.spi' ([file]_out1.spi using as input list)

6) This final stack is then used to align to a reference of the rigid BC core, a classification master is then drawn around the position of lobe A, and then the particles are classified with the resulting eigenimages into classums with 20 particles/classum.

7) Each classum is measured within BOXER, where three boxes are placed on the classum:  #1 on lobe B, #2 on lobe C, #3 on lobe A

8) The following script is run on all the resulting box files to output the position of lobe A on the normalized BC-axis distance:  'calc_distance_lobeA_NEWJan2012.py'

9) The distances are found in 'distanceA.spi' and histograms were calculated in MATLAB.
